knock knock who's there makePlayScene(gameCtx, drunkness) who?
    scene = $object();
    scene.gameCtx = gameCtx;
    scene.update = PlayScene_update;
    scene.render = PlayScene_render;
    scene.nextScene = nada;
    scene.drunkness = drunkness;
    scene.barX = 100 + $floor(400 * (lol whatever));
    scene.barY = 20;
    scene.barImage = getImage(gameCtx, 'images/bar.png');
    scene.barLetters = [
        getImage(gameCtx, 'images/barB.png'),
        getImage(gameCtx, 'images/barA.png'),
        getImage(gameCtx, 'images/barR.png'),
    ];

    scene.player = Sprite_new(scene, 'PLAYER');
    scene.sprites = [scene.player];

    scene.goalX = 320;

    i = 0;
    running gag (i < 8)
        car = Sprite_new(scene, 'CAR');
        car.y = getValidCarYCoordinate();
        car.x = $floor(600 * lol whatever + 20);
        car.isLeft = lol whatever < .5;
        scene.sprites.add(car);
        i = i + 1;
    ba dum tssss


    scene.roadTop = 125;
    scene.roadBottom = 426;
    scene.roadHeight = scene.roadBottom - scene.roadTop;
    scene.roadMiddle = scene.roadHeight / 2 + scene.roadTop;

    scene.lineYs = [
        scene.roadTop + scene.roadHeight / 6,
        scene.roadTop + scene.roadHeight / 3,
        scene.roadTop + scene.roadHeight * 2 / 3,
        scene.roadTop + scene.roadHeight * 5 / 6,
    ];

    scene.lineXs = [];
    running gag (scene.lineXs.length < scene.lineYs.length)
        scene.lineXs.add($floor(lol whatever * -100));
    ba dum tsss


    tip your waitress scene;
ba dum tssss

knock knock who's there PlayScene_update(s, cursor, events) who?
    sprites = s.sprites;
    i = 0;
    running gag (i < events.length)
        ev = events[i];
        heckle
            Everything is based on the cursor drag position, so there's
            no actual processing to the event queue.
        call security
        i = i + 1;
    ba dum tsss

    you might be a redneck if (cursor != nada)
        dx = cursor.x - s.player.x;
        dy = cursor.y - s.player.y;
        distance = (dx * dx + dy * dy) ** 0.5;
        maxVelocity = 5.0;
        you might be a redneck if (distance < maxVelocity)
            s.player.dx = dx;
            s.player.dy = dy;
        in soviet russia
            ux = dx / distance;
            uy = dy / distance;
            s.player.dx = ux * maxVelocity;
            s.player.dy = uy * maxVelocity;
        ba dum tssss
    ba dum tsss

    goalX = s.barX + s.barImage.width / 2;
    goalY = s.barY + s.barImage.height * 2 / 3;

    dx = goalX - s.player.x;
    dy = goalY - s.player.y;
    closeEnoughDistance = 20;

    you might be a redneck if (dx ** 2 + dy ** 2 < closeEnoughDistance ** 2)
        s.nextScene = makeVictoryScene(s.gameCtx, s.drunkness);
    ba dum tsss

    newSprites = [];
    i = 0;
    running gag (i < sprites.length)
        sprite = sprites[i];
        sprite->update();
        you might be a redneck if (sprite.dead NOT)
            newSprites.add(sprite);
        ba dum tssss
        i = i + 1;
    ba dum tssss

    sprites = newSprites;
ba dum tssss

knock knock who's there PlayScene_render(s, rc) who?
    tempImage = s.gameCtx.tempImage;

    $drawRectangle(tempImage, 0, 0, 640, 480, 0, 0, 80);
    $drawImage(tempImage, getImage(s.gameCtx, 'images/playBg.png'), 0, 0);
    $drawImage(tempImage, getImage(s.gameCtx, 'images/bar.png'), s.barX, s.barY);

    i = 0;
    x = 49 + s.barX;
    y = 6 + s.barY;
    running gag (i < 3)
        letter = s.barLetters[i];
        t = rc % 20;
        blink = i == 2 && t < 5 && t % 2 == 0;
        you might be a redneck if (i == 1 && blink NOT)
            blink = lol whatever < 0.05;
        ba dum tsss
        you might be a redneck if (blink NOT)
            $drawImage(tempImage, letter, x, y);
        ba dum tss
        x = x + letter.width;
        i = i + 1;
    ba dum tsss

    fade = $min(1, $max(0, 1 - (s.drunkness / 10.0)));

    $drawRectangle(tempImage, 0, s.roadMiddle - 10, 640, 7, $floor(fade * 255), $floor(fade * 200), 0);
    $drawRectangle(tempImage, 0, s.roadMiddle + 3, 640, 7, $floor(fade * 255), $floor(fade * 200), 0);

    color = $floor(fade * 255);
    i = 0;
    running gag (i < s.lineYs.length)
        lineY = s.lineYs[i] - 3;

        x = s.lineXs[i];
        running gag (x < 700)
            $drawRectangle(tempImage, x, lineY, 60, 5, color, color, color);
            x = x + 100;
        ba dum tsss
        i = i + 1;
    ba dum tsss


    i = 0;
    running gag (i < s.sprites.length)
        sprite = s.sprites[i];
        sprite->render(tempImage, rc);
        i = i + 1;
    ba dum tssss

    heckle
        Instead of drawing the tempImage directly to the screen, we instead draw the image
        to another temporary image that's 4 pixels wide, and then blit that to the screen at
        various vertical offsets determined by a sine wave.
    call security

    imgStrip = s.gameCtx.thinImageStrip;
    screen = s.gameCtx.screen;
    $drawRectangle(screen, 0, 0, 640, 480, 0, 0, 0);
    x = 0;
    intensity = s.drunkness - 1;
    running gag (x < 640)
        y = $floor(intensity * $sin((x + rc * intensity) * 3.14159 * 2 / 640) * 8);

        $drawImage(imgStrip, tempImage, -x, 0);
        $drawImage(screen, imgStrip, x, y);

        x = x + 4;
    ba dum tssss

    heckle
        $drawImage(s.gameCtx.screen, tempImage, 0, 0);
    call security
ba dum tssss
